/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.example.firstnetwork

// participant SampleParticipant identified by participantId {
//  o String participantId
//  o String firstName
//  o String lastName
// }

// asset SampleAsset identified by assetId {
//   o String assetId
//   --> SampleParticipant owner
//   o String value
// }

// transaction SampleTransaction {
//   --> SampleAsset asset
//   o String newValue
// }

// event SampleEvent {
//   --> SampleAsset asset
//   o String oldValue
//   o String newValue
// }

/* MY CONTENT */
participant Person identified by participantId {
  o String participantId
  o String firstName
  o String lastName
}

participant Organization identified by organizationId {
  o String organizationId
  o String Name
}

asset Resume identified by resumeId {
  o String resumeId //resumeId should be same as owner's participantId
  --> Person owner  //the ownership of the resume is untransferable
  --> Organization[] org //the organization that allowed to read resume
  o ResumeValue[] value  //save every event, achievement, etc
}

//Temporary Holder for request to addValue to Resume
asset requestDoc identified by requestId {
  o String requestId 
  --> Person owner
  --> Organization org
  --> Resume resume      //resume that will be added
  o ResumeValue addValue  //event, achievement, etc
}

concept ResumeValue {
  o String Value
  --> Organization org
  o Boolean Approved
}

asset approvedDoc identified by approvedId {
  o String approvedId 
  --> Person owner
  --> Organization org
  --> Resume resume      //resume that will be added
  o ResumeValue addValue  //event, achievement, etc
}

//Company add event
transaction OrganizationAdd {
  --> Resume resume
  o ResumeValue addValue
}

event OrganizationAddEvent {
  --> approvedDoc approved
  o ResumeValue addValue
}

//Person add event
transaction PersonAdd {
  --> Person owner
  --> Organization org
  --> Resume resume      //resume that will be add
  o ResumeValue addValue  //event, achievement, etc
}

event PersonAddEvent {
  --> requestDoc asset
  o ResumeValue addValue
}

//Company approve person's add event
transaction OrganizationApproved {
  --> requestDoc request
}

event OrganizationApprovedEvent {
  --> Resume asset
  o ResumeValue addValue
}

//Company approve person's add event
transaction UpdateResume {
  --> approvedDoc approved
}

event UpdateResumeEvent {
  --> Resume asset
  o ResumeValue addValue
}

//Person changes employer state on resume
transaction AddEmployer {
  --> Resume resume
  --> Organization employer
}

transaction DeleteEmployer {
  --> Resume resume
  --> Organization employer
}